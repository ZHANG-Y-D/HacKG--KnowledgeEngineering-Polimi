{"hackathon-id": "ethwaterloo", "hackathon-winner": "True", "project-technologies-used": "8", "project-video": "https://www.youtube.com/embed/iuA-Pq1YdBE?enablejsapi=1&hl=en_US&rel=0&start=&version=3&wmode=transparent", "project-basis": "The front end is built with Vue.js and a google material template called vuetify. We rely heavily on the 0x.js library. Our front end is served by netlify who provides SSL and a CDN. Our server runs express with node.js, uses postgreSQL as a database and is hosted on Digital Ocean. We use the Cryptocompare API to get real time price updates using websockets.", "project-technologies": [{"url": "", "name": "vue.js"}, {"url": "https://devpost.com/software/built-with/javascript", "name": "javascript"}, {"url": "", "name": "0x"}, {"url": "https://devpost.com/software/built-with/postgresql", "name": "postgresql"}, {"url": "https://devpost.com/software/built-with/node-js", "name": "node.js"}, {"url": "https://devpost.com/software/built-with/websockets", "name": "websockets"}, {"url": "", "name": "web3"}, {"url": "https://devpost.com/software/built-with/express-js", "name": "express.js"}], "project-challenges": "We found it challenging to take a transaction hash and reverse engineering it to find the details about the original fill order in order to figure out whether the order was still valid and partially unfilled.  It was also challenging to open a socket to gather real-time price updates from CryptoCompare, and once we had implemented it, we realized that the prices from the socket were actually less accurate than from the standard get request for prices.", "project-future-plans": "Waiting for other relayers to make their order books public to increase the size of our databases and finding other venues for scraping valid orders.", "project-purpose": "0xchange.me is a tool for making, taking and searching a constantly pruned database of valid 0x orders in the form of a user interface and an API. We use Sai as a stable denomination to express when an order is above or below the market average highlighting arbitrage opportunities.", "hackathon-url": "https://ethwaterloo.devpost.com/", "project-title": "0xchange.me", "project-inspiration": "After creating another contract that incentivized users with an ERC20 token it became apparent that initial coin adoption can be difficult to obtain. Users are wary to buy into a coin that isn't on exchanges and exchanges aren't interested in a coin that doesn't have users. Our decentralized exchange allows fledgling and niche tokens a first opportunity of exposure and liquidity. We have our own directory of user generated tokens and our API is open for anyone to submit a valid 0x order. The goal of 0xchange.me is to provide as many order offers as possible\u2014whether in the form of niche token ICOs, other relayers (with their fees included) or anyone interested in making a trade without transaction fees. We've explored techniques for scraping the blockchain for partially filled but still valid orders in order to offer as many options as possible. We're more of a 0x order search engine than a proper relayer, with the goal of capturing users attention by providing cheap decentralized liquidity.", "project-lessons-learned": "Sleep is important", "project-accomplishments": "We came together and launched a working product in less than 27 hours after never having met each other before.", "project-likes": "6", "hackathon-name": "ETHWaterloo", "project-subtitle": "A free and open relayer in the decentralized exchange ecosystem", "project-github-url": "https://github.com/okwme/0xchange", "project-number-of-comments": "0", "team-size": "4", "project-creation-timestamp": "2017-10-16T14:18:56-04:00", "team": [{"participant-bubble": "My contribution was building the backend - a Node/Express.js REST API server with a PostgreSQL database storing tokens and orders from the 0x protocol. I deployed the server on to a DigitalOcean Droplet.", "participant-name": "Gregory F J Hogue", "participant-desc": "", "participant-url": "https://devpost.com/GFJHogue", "participant-id": "GFJHogue"}, {"participant-bubble": "", "participant-name": "Billy Rennekamp", "participant-desc": "", "participant-url": "https://devpost.com/billyrennekamp", "participant-id": "billyrennekamp"}, {"participant-bubble": "", "participant-name": "Alex Zhao", "participant-desc": "", "participant-url": "https://devpost.com/alextzhao", "participant-id": "alextzhao"}, {"participant-bubble": "", "participant-name": "Kevin Ho", "participant-desc": "", "participant-url": "https://devpost.com/K-Ho", "participant-id": "K-Ho"}], "project-url": "https://devpost.com/software/0xchange-me", "project-id": "0xchange-me"}